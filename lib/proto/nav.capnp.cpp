// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: nav.capnp

#include "nav.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<24> b_996d72726f728df4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    244, 141, 114, 111, 114, 114, 109, 153,
     20,   0,   0,   0,   4,   0,   0,   0,
    163, 152,  40, 215, 166, 192, 234, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105,  98,  47, 112, 114, 111, 116,
    111,  47, 110,  97, 118,  46,  99,  97,
    112, 110, 112,  58,  99, 109, 100,  78,
    117, 109,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   5,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_996d72726f728df4 = b_996d72726f728df4.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_996d72726f728df4 = {
  0x996d72726f728df4, b_996d72726f728df4.words, 24, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_996d72726f728df4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<42> b_8e2bf1c73aaad8d1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209, 216, 170,  58, 199, 241,  43, 142,
     20,   0,   0,   0,   2,   0,   0,   0,
    163, 152,  40, 215, 166, 192, 234, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 151,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105,  98,  47, 112, 114, 111, 116,
    111,  47, 110,  97, 118,  46,  99,  97,
    112, 110, 112,  58,  67, 111, 109, 109,
     97, 110, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 107, 110, 111, 119, 110,   0,
    100, 111, 119, 110,   0,   0,   0,   0,
    117, 112,   0,   0,   0,   0,   0,   0,
    108, 101, 102, 116,   0,   0,   0,   0,
    114, 105, 103, 104, 116,   0,   0,   0,
    101, 110, 116, 101, 114,   0,   0,   0, }
};
::capnp::word const* const bp_8e2bf1c73aaad8d1 = b_8e2bf1c73aaad8d1.words;
#if !CAPNP_LITE
static const uint16_t m_8e2bf1c73aaad8d1[] = {1, 5, 3, 4, 0, 2};
const ::capnp::_::RawSchema s_8e2bf1c73aaad8d1 = {
  0x8e2bf1c73aaad8d1, b_8e2bf1c73aaad8d1.words, 42, nullptr, m_8e2bf1c73aaad8d1,
  0, 6, nullptr, nullptr, nullptr, { &s_8e2bf1c73aaad8d1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Command_8e2bf1c73aaad8d1, 8e2bf1c73aaad8d1);
static const ::capnp::_::AlignedData<24> b_f7995f58daf6ddee = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    238, 221, 246, 218,  88,  95, 153, 247,
     20,   0,   0,   0,   4,   0,   0,   0,
    163, 152,  40, 215, 166, 192, 234, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105,  98,  47, 112, 114, 111, 116,
    111,  47, 110,  97, 118,  46,  99,  97,
    112, 110, 112,  58, 112,  97, 103, 101,
     78, 117, 109,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,  19,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f7995f58daf6ddee = b_f7995f58daf6ddee.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f7995f58daf6ddee = {
  0xf7995f58daf6ddee, b_f7995f58daf6ddee.words, 24, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f7995f58daf6ddee, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<122> b_e0786fefa13dfc96 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    150, 252,  61, 161, 239, 111, 120, 224,
     20,   0,   0,   0,   2,   0,   0,   0,
    163, 152,  40, 215, 166, 192, 234, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 105,  98,  47, 112, 114, 111, 116,
    111,  47, 110,  97, 118,  46,  99,  97,
    112, 110, 112,  58,  80,  97, 103, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     80,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0, 154,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     19,   0,   0,   0,   0,   0,   0,   0,
    177,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 105, 110,   0,   0,   0,   0,
    115, 101, 116, 116, 105, 110, 103, 115,
     69, 110, 116, 114, 121,   0,   0,   0,
    116, 114,  97, 100, 101,  69, 110, 116,
    114, 121,   0,   0,   0,   0,   0,   0,
    102, 108, 101, 101, 116,  69, 110, 116,
    114, 121,   0,   0,   0,   0,   0,   0,
    108,  97, 117, 110,  99, 104,  69, 110,
    116, 114, 121,   0,   0,   0,   0,   0,
    115, 101, 116, 116, 105, 110, 103, 115,
     67, 104,  97, 110, 103, 101,  78,  97,
    109, 101,   0,   0,   0,   0,   0,   0,
    115, 101, 116, 116, 105, 110, 103, 115,
     83, 101, 108, 101,  99, 116,  85, 115,
    101, 114,   0,   0,   0,   0,   0,   0,
    115, 101, 116, 116, 105, 110, 103, 115,
     82, 101, 115, 101, 116,   0,   0,   0,
    115, 104, 105, 112,  68, 101, 116,  97,
    105, 108, 115,   0,   0,   0,   0,   0,
    115, 104, 105, 112,  77, 105, 115, 115,
    105, 111, 110,  83, 101, 108, 101,  99,
    116,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 105, 112,  68, 101, 115, 116,
     83, 101, 108, 101,  99, 116,   0,   0,
    115, 104, 105, 112,  67, 111, 110, 102,
    105, 114, 109,   0,   0,   0,   0,   0,
    115, 104, 105, 112,  83, 112, 108,  97,
    115, 104,   0,   0,   0,   0,   0,   0,
    115, 104, 105, 112,  82, 101, 110,  97,
    109, 101,   0,   0,   0,   0,   0,   0,
    101, 118, 101, 110, 116,  83, 104, 105,
    112,  86, 105, 115, 105, 116,   0,   0,
    101, 118, 101, 110, 116,  80, 108,  97,
    121, 101, 114,  76,  97, 117, 110,  99,
    104,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 105, 112,  86, 105, 115, 105,
    116,  68, 101,  99, 105, 115, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 105, 112,  86, 105, 115, 105,
    116,  79, 117, 116,  99, 111, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 117, 110,  99, 104,  83, 112,
    108,  97, 115, 104,   0,   0,   0,   0,
    110, 111,  79, 112,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e0786fefa13dfc96 = b_e0786fefa13dfc96.words;
#if !CAPNP_LITE
static const uint16_t m_e0786fefa13dfc96[] = {15, 14, 3, 4, 18, 0, 19, 5, 1, 7, 6, 11, 10, 8, 9, 13, 12, 16, 17, 2};
const ::capnp::_::RawSchema s_e0786fefa13dfc96 = {
  0xe0786fefa13dfc96, b_e0786fefa13dfc96.words, 122, nullptr, m_e0786fefa13dfc96,
  0, 20, nullptr, nullptr, nullptr, { &s_e0786fefa13dfc96, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Page_e0786fefa13dfc96, e0786fefa13dfc96);
}  // namespace schemas
}  // namespace capnp
